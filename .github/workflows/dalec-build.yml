name: DALEC Package Build

on:
  repository_dispatch:
    types: [binary_ready]
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  build-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      
    strategy:
      matrix:
        target: [jammy, bookworm, mariner2]
        platform:
          - linux/amd64
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download surveilr binary
        run: |
          # Try to derive version if it's a tag, else use 'latest'
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION="latest"
          fi

          echo "📦 Downloading surveilr binary for version: $VERSION"
          
          # Download from release (you can adjust this URL if your 'latest' asset differs)
          wget -q "https://github.com/surveilr/surveilr/releases/download/${VERSION}/surveilr_${VERSION}_x86_64-unknown-linux-gnu.tar.gz" -O surveilr.tar.gz || {
            echo "❌ Failed to fetch surveilr binary for version ${VERSION}"
            exit 1
          }
          
          # Extract binary
          tar -xzf surveilr.tar.gz || {
            echo "❌ Failed to extract surveilr binary"
            exit 1
          }
          
          # Place binary where DALEC expects it
          mkdir -p src
          cp surveilr src/surveilr
          chmod +x src/surveilr

          echo "✅ surveilr binary downloaded and prepared."

        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          driver-opts: |
            network=host
            
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/surveilr-${{ matrix.target }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            
      - name: Build and push package
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dalec-surveilr-deb.yaml
          platforms: ${{ matrix.platform }}
          target: ${{ matrix.target }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: true
          provenance: true
          
      - name: Generate SBOM
        if: matrix.platform == 'linux/amd64'
        run: |
          # Extract SBOM from built image
          docker buildx imagetools inspect \
            ${{ env.REGISTRY }}/${{ github.repository }}/surveilr:${{ github.sha }} \
            --format '{{ json .SBOM }}' > surveilr-sbom.json
            
      - name: Upload SBOM
        if: matrix.platform == 'linux/amd64'
        uses: actions/upload-artifact@v4
        with:
          name: surveilr-sbom
          path: surveilr-sbom.json
          
  extract-packages:
    needs: build-packages
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    strategy:
      matrix:
        format: [deb, rpm]
        platform: [linux/amd64]
    
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract package artifacts
        run: |
          # Create container from built image
          CONTAINER_ID=$(docker create \
            ${{ env.REGISTRY }}/${{ github.repository }}/surveilr:${{ github.ref_name }})
          
          # Extract package files based on format
          case "${{ matrix.format }}" in
            deb)
              docker cp $CONTAINER_ID:/packages/ ./packages/
              find ./packages -name "*.deb" -exec mv {} ./ \;
              ;;
            rpm)
              docker cp $CONTAINER_ID:/packages/ ./packages/
              find ./packages -name "*.rpm" -exec mv {} ./ \;
              ;;
            tar)
              docker cp $CONTAINER_ID:/packages/ ./packages/
              find ./packages -name "*.tar.gz" -exec mv {} ./ \;
              ;;
          esac
          
          # Clean up container
          docker rm $CONTAINER_ID
          
      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: surveilr-${{ matrix.format }}-${{ matrix.platform }}
          path: "*.{deb,rpm,tar.gz}"
          
  create-release:
    needs: [build-packages, extract-packages]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.deb
            artifacts/**/*.rpm
            artifacts/**/*.tar.gz
            artifacts/**/*sbom.json
          generate_release_notes: true
          prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}